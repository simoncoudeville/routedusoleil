/*
    Components: Buttons
    ---
    Button styles, sizes, etc.
*/

/**
 *  1. The user agent may consider touches that begin on the element
 *     only for the purposes of scrolling and continuous zooming.
 *  2. Reset unusual Firefox-on-Android default style.
 *     see https://github.com/necolas/normalize.css/issues/214
 *  3. Sequences of whitespace will collapse into a single whitespace.
 *     Text will never wrap to the next line.
 *     The text continues on the same line until a <br> tag is encountered.
 *  4. Controls the application of anti-aliasing when fonts are rendered.
 *     Webkit & Firefox implements.
 *     Works only on Mac OS X platform.
 */

.c-button-reset {
    background: none;
    border: 0;
    color: inherit;
    /* cursor: default; */
    font: inherit;
    line-height: normal;
    overflow: visible;
    padding: 0;
    appearance: button; /* for input */
    user-select: none;
    outline: none;
}

.c-button {
    display: inline-block;
    margin: 0;
    text-align: center;
    font-weight: $gamma-font-weight;
    text-transform: uppercase;
    //letter-spacing: 1px;
    font-family: $delta-font-family;
    vertical-align: middle;
    touch-action: manipulation; /* [1] */
    background-image: none; /* [2] */
    white-space: nowrap; /* [3] */
    border-radius: $radius;
    border-style: solid;
    border-width: 1px;
    transition-duration: $animation-duration-alpha;
    transition-timing-function: $animation-easing-alpha;
    transition-property: transform, background, color, border;
    outline: none;
    line-height: normal;
    appearance: none;
    box-shadow: none;
    letter-spacing: 0.04em;
    -webkit-font-smoothing: antialiased; /* [4] */
    -moz-osx-font-smoothing: grayscale; /* [4] */

    &:hover,
    &:focus {
        text-decoration: none;
    }

    &:active {
        outline: 0;
        background-image: none;
    }

    &[disabled],
    &[disabled]:hover {
        background: palette(color-neutral,light);
        color: palette(color-neutral);
        border: palette(color-neutral);
    }
}

// Button display

.c-button--block {
    display: block;
    width: 100%;
}

.c-button--float-left {
    display: block;
    float: left;

    .c-button-group > & {
        @include margin-right(1);
    }
}

.c-button--float-right {
    display: block;
    float: right;

    .c-button-group > & {
        @include margin-right(1);
    }
}

// round Button

.c-button--round {
    border-radius: 100px;
}

// Button sizes

.c-button--sm {
    @include padding-lr(.75,.75);
    @include input-dimensions($ms-2,1,0,.5,.5);
}

.c-button--md {
    @include padding-lr(1.5,1.5);
    @include input-dimensions($ms-1,1,0,.5,.675);
}

.c-button--lg {
    @include padding-lr(2,2);
    @include input-dimensions($alpha-font-size,1,0,.9,1.1);
}

// Button colors

.c-button--alpha {
    background-color: palette(color-alpha);
    border-color: palette(color-alpha);

    &,
    &:visited {
        color: white;
    }

    &:hover,
    &:focus {
        background-color: white;
        border-color: white;
        color: palette(color-alpha);
    }

    &:active {
        background-color: white;
        border-color: white;
        color: palette(color-alpha);
    }
}

.c-button--beta {
    background-color: palette(color-beta);
    border-color: palette(color-beta);

    &,
    &:visited {
        color: white;
    }

    &:hover,
    &:focus {
        background-color: white;
        border-color: white;
        color: palette(color-beta);
    }

    &:active {
        //background-color: palette(color-beta);
        //border-color: palette(color-beta);
        background-color: white;
        border-color: white;
        color: palette(color-beta);
    }
}

.c-button--beta-neg {
    background-color: white;
    border-color: white;

    &,
    &:visited {
        //color: white;
        color: palette(color-beta);
    }

    &:hover,
    &:focus {
        background-color: palette(color-beta);
        border-color: palette(color-beta);
        color: white;
    }

    &:active {
        background-color: palette(color-beta);
        border-color: palette(color-beta);
        color: white;
    }
}

.c-button--alpha-neg {
    background-color: white;
    border-color: white;

    &,
    &:visited {
        //color: white;
        color: palette(color-alpha);
    }

    &:hover,
    &:focus {
        background-color: palette(color-alpha);
        border-color: palette(color-alpha);
        color: white;
    }

    &:active {
        background-color: palette(color-alpha);
        border-color: palette(color-alpha);
        color: white;
    }
}

.c-button--shadow {
    box-shadow: 0 5px 25px rgba(palette(color-neutral,xxx-dark),.125);
}

.c-button--ghost {
    background-color: rgba(white,.5);
    border: 0;
    color: white;
}

.c-button--loadmore {
    border: 0;
}

// Modifiers

.c-button--postfix {
    border-radius: 0 $radius $radius 0;
}

// effects

.c-button--effect-grow {
    &:hover,
    &:focus {
        transform: scale(1.05);
    }

    &:active {
        transform: scale(1);
    }
}

// Button-group

.c-button-group {
    position: relative;
    @include clearfix;
}
